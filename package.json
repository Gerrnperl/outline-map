{
	"name": "outline-map",
	"displayName": "Outline Map",
	"description": "A visual, interactive outline map that combinesAlternative Minimap. the clarity of the outline with the intuitive overview of the minimap. Enhanced version of vscode built-in outline.",
	"version": "1.3.2",
	"repository": {
		"url": "https://github.com/Gerrnperl/outline-map.git"
	},
	"keywords": [
		"outline",
		"map",
		"minimap",
		"Thumbnail"
	],
	"author": {
		"name": "Gerrnperl"
	},
	"browser": "./out/extension/index.js",
	"icon": "icon/outline-map.png",
	"publisher": "Gerrnperl",
	"galleryBanner": {
		"color": "#3f51b5",
		"theme": "dark"
	},
	"license": "MIT",
	"engines": {
		"vscode": "^1.60.0"
	},
	"categories": [
		"Other"
	],
	"activationEvents": [
		"onView:outline-map-view"
	],
	"main": "./out/extension/index.js",
	"badges": [
		{
			"href": "https://img.shields.io/",
			"url": "https://img.shields.io/visual-studio-marketplace/v/gerrnperl.outline-map?color=8bf7c7&logo=visualstudio&style=flat-square",
			"description": "version"
		},
		{
			"href": "https://img.shields.io/",
			"url": "https://img.shields.io/visual-studio-marketplace/i/gerrnperl.outline-map?color=56b6c2&logo=visualstudiocode&style=flat-square",
			"description": "installs"
		},
		{
			"href": "https://img.shields.io/",
			"url": "https://img.shields.io/visual-studio-marketplace/stars/gerrnperl.outline-map?color=97dbf3&style=flat-square",
			"description": "rating"
		}
	],
	"contributes": {
		"viewsContainers": {
			"activitybar": [
				{
					"id": "outline-map",
					"title": "Outline Map",
					"icon": "icon/outline-map-24.svg"
				}
			]
		},
		"views": {
			"outline-map": [
				{
					"type": "webview",
					"id": "outline-map-view",
					"name": "%om.views.outline%"
				},
				{
					"type": "tree",
					"id": "outline-map-workspace",
					"name": "%om.views.workspace%",
					"when": "outline-map.workspace.enabled"
				}
			]
		},
		"configuration": {
			"title": "Outline Map",
			"properties": {
				"outline-map.color": {
					"type": "object",
					"deprecationMessage": "%om.config.color.deprecationMessage%",
					"description": "%om.config.color.description%",
					"properties": {
						"__om_Tag__": {
							"type": "string",
							"title": "Tag",
							"description": "The color of the custom tag symbols in the outline."
						},
						"__om_Region__": {
							"type": "string",
							"title": "Region",
							"description": "The color of the custom region symbols in the outline."
						},
						"visibleRange": {
							"type": "string",
							"title": "Visible Range",
							"description": "The color of the visible range in the outline."
						},
						"focusingItem": {
							"type": "string",
							"description": "The color of the focusing item in the outline."
						},
						"module": {
							"type": "string"
						},
						"namespace": {
							"type": "string"
						},
						"package": {
							"type": "string"
						},
						"class": {
							"type": "string"
						},
						"method": {
							"type": "string"
						},
						"property": {
							"type": "string"
						},
						"field": {
							"type": "string"
						},
						"constructor": {
							"type": "string"
						},
						"enum": {
							"type": "string"
						},
						"interface": {
							"type": "string"
						},
						"function": {
							"type": "string"
						},
						"variable": {
							"type": "string"
						},
						"constant": {
							"type": "string"
						},
						"string": {
							"type": "string"
						},
						"number": {
							"type": "string"
						},
						"boolean": {
							"type": "string"
						},
						"array": {
							"type": "string"
						},
						"object": {
							"type": "string"
						},
						"key": {
							"type": "string"
						},
						"null": {
							"type": "string"
						},
						"enummember": {
							"type": "string"
						},
						"struct": {
							"type": "string"
						},
						"event": {
							"type": "string"
						},
						"operator": {
							"type": "string"
						},
						"typeparameter": {
							"type": "string"
						}
					}
				},
				"outline-map.customCSS": {
					"type": "string",
					"default": "",
					"description": "%om.config.customCSS.description%",
					"order": 1
				},
				"outline-map.customFont": {
					"type": "string",
					"default": "",
					"markdownDescription": "%om.config.customFont.description%",
					"order": 2
				},
				"outline-map.follow": {
					"type": "string",
					"enum": [
						"cursor",
						"viewport",
						"manual"
					],
					"default": "cursor",
					"description": "%om.config.follow.description%",
					"markdownEnumDescriptions": [
						"%om.config.follow.enumDescriptions.cursor%",
						"%om.config.follow.enumDescriptions.viewport%",
						"%om.config.follow.enumDescriptions.manual%"
					],
					"order": 3
				},
				"outline-map.expand": {
					"type": "string",
					"enum": [
						"cursor",
						"viewport",
						"manual"
					],
					"default": "viewport",
					"description": "%om.config.expand.description%",
					"markdownEnumDescriptions": [
						"%om.config.expand.enumDescriptions.cursor%",
						"%om.config.expand.enumDescriptions.viewport%",
						"%om.config.expand.enumDescriptions.manual%"
					],
					"order": 4
				},
				"outline-map.hiddenItem": {
					"type": "array",
					"description": "%om.config.hiddenItem.description%",
					"items": {
						"type": "string",
						"enum": [
							"module",
							"namespace",
							"package",
							"class",
							"method",
							"property",
							"field",
							"constructor",
							"enum",
							"interface",
							"function",
							"variable",
							"constant",
							"string",
							"number",
							"boolean",
							"array",
							"object",
							"key",
							"null",
							"enummember",
							"struct",
							"event",
							"operator",
							"typeparameter"
						]
					},
					"order": 5
				},
				"outline-map.defaultMaxDepth": {
					"type": "number",
					"default": 0,
					"description": "%om.config.defaultMaxDepth.description%",
					"order": 6
				},
				"outline-map.region.enabled": {
					"type": "boolean",
					"default": true,
					"markdownDescription": "%om.config.region.enabled.description%"
				},
				"outline-map.region.registerSymbolProvider": {
					"type": "boolean",
					"default": false,
					"markdownDescription": "%om.config.region.registerSymbolProvider.description%"
				},
				"outline-map.region.highlight": {
					"type": "boolean",
					"default": true,
					"markdownDescription": "%om.config.region.highlight.description%"
				},
				"outline-map.region.highlightStyle": {
					"type": "object",
					"required": [],
					"default": {},
					"markdownDescription": "%om.config.region.highlightStyle.description%",
					"properties": {
						"key": {
							"type": "object",
							"description": "%om.config.region.highlightStyle.properties.key.description%",
							"required": [],
							"default": {},
							"properties": {
								"color": {
									"type": "string"
								},
								"backgroundColor": {
									"type": "string"
								},
								"overviewRulerColor": {
									"type": "string"
								}
							}
						},
						"name": {
							"type": "object",
							"description": "%om.config.region.highlightStyle.properties.name.description%",
							"required": [],
							"default": {},
							"properties": {
								"color": {
									"type": "string"
								},
								"backgroundColor": {
									"type": "string"
								},
								"overviewRulerColor": {
									"type": "string"
								}
							}
						},
						"description": {
							"type": "object",
							"description": "%om.config.region.highlightStyle.properties.description.description%",
							"required": [],
							"default": {},
							"properties": {
								"color": {
									"type": "string"
								},
								"backgroundColor": {
									"type": "string"
								},
								"overviewRulerColor": {
									"type": "string"
								}
							}
						}
					}
				},
				"outline-map.region.startRegion": {
					"type": "string",
					"default": "#region",
					"description": "%om.config.region.startRegion.description%"
				},
				"outline-map.region.endRegion": {
					"type": "string",
					"default": "#endregion",
					"description": "%om.config.region.endRegion.description%"
				},
				"outline-map.region.tag": {
					"type": "string",
					"default": "#tag",
					"description": "%om.config.region.tag.description%"
				},
				"outline-map.workspace.enabled": {
					"type": "boolean",
					"default": true,
					"markdownDescription": "%om.config.workspace.enabled.description%"
				},
				"outline-map.workspace.IncludeSymbols": {
					"type": "array",
					"description": "%om.config.workspace.IncludeSymbols.description%",
					"items": {
						"type": "string",
						"enum": [
							"File", "Module", "Namespace",
							"Package", "Class", "Method",
							"Property", "Field", "Constructor",
							"Enum", "Interface", "Function",
							"Variable", "Constant", "String",
							"Number", "Boolean", "Array",
							"Object", "Key", "Null",
							"EnumMember", "Struct", "Event",
							"Operator", "TypeParameter", "__om_Tag__",
							"__om_Region__"
						]
					},
					"default": [
						"__om_Tag__",
						"__om_Region__"
					]
				},
				"outline-map.workspace.excludes": {
					"type": "array",
					"markdownDescription": "%om.config.workspace.excludes.description%",
					"items": {
						"type": "object",
						"required": [],
						"properties": {
							"file": {
								"type": "string",
								"description": "%om.config.workspace.excludes.item.properties.file.description%"
							},
							"symbol": {
								"type": "string",
								"description": "%om.config.workspace.excludes.item.properties.symbol.description%"
							}
						}
					}
				},
				"outline-map.workspace.IncludeNames": {
					"type": "array",
					"description": "%om.config.workspace.IncludeNames.description%",
					"items": {
						"type": "object",
						"required": ["symbol"],
						"properties": {
							"file": {
								"type": "string",
								"description": "%om.config.workspace.IncludeNames.item.properties.file.description%"
							},
							"symbol": {
								"type": "string",
								"description": "%om.config.workspace.IncludeNames.item.properties.symbol.description%"
							}
						}
					}
				},
				"outline-map.workspace.fixedFiles": {
					"type": "number",
					"description": "%om.config.workspace.fixedFiles.description%",
					"default": 0
				},
				"outline-map.workspace.closeFileTimeout": {
					"type": "number",
					"description": "%om.config.workspace.closeFileTimeout.description%",
					"default": 0
				},
				"outline-map.findRef.enabled": {
					"type": "boolean",
					"default": false,
					"markdownDescription": "%om.config.findRef.enabled.description%"
				},
				"outline-map.findRef.uesFindImpl": {
					"type": "boolean",
					"default": false,
					"markdownDescription": "%om.config.findRef.useFindImpl.description%"
				},
				"outline-map.debug": {
					"type": "boolean",
					"default": false,
					"description": "Enable debug mode. Debug messages will be printed to the console."
				}
			}
		},
		"commands": [
			{
				"command": "outline-map.reduceDepth",
				"title": "%om.cmd.reduceDepth.title%",
				"icon": "$(chevron-left)",
				"category": "outline-map"
			},
			{
				"command": "outline-map.addDepth",
				"title": "%om.cmd.addDepth.title%",
				"icon": "$(chevron-right)",
				"category": "outline-map"
			},
			{
				"command": "outline-map.unpin",
				"title": "%om.cmd.unpin.title%",
				"icon": "$(pinned-dirty)",
				"category": "outline-map"
			},
			{
				"command": "outline-map.pin",
				"title": "%om.cmd.pin.title%",
				"icon": "$(pin)",
				"category": "outline-map"
			},
			{
				"command": "outline-map.unfreeze",
				"title": "%om.cmd.unfreeze.title%",
				"icon": "$(pinned)",
				"category": "outline-map"
			},
			{
				"command": "outline-map.freeze",
				"title": "%om.cmd.freeze.title%",
				"icon": "$(pinned)",
				"category": "outline-map"
			},
			{
				"command": "outline-map.toggleSearch",
				"title": "%om.cmd.toggleSearch.title%",
				"icon": "$(search)",
				"category": "outline-map"
			},
			{
				"command": "outline-map.focusSearch",
				"title": "%om.cmd.focusSearch.title%",
				"icon": "$(search)",
				"category": "outline-map"
			},
			{
				"command": "outline-map.sortByPosition",
				"title": "%om.cmd.sortByPosition.title%",
				"category": "outline-map"
			},
			{
				"command": "outline-map.sortByName",
				"title": "%om.cmd.sortByName.title%",
				"category": "outline-map"
			},
			{
				"command": "outline-map.sortByKind",
				"title": "%om.cmd.sortByKind.title%",
				"category": "outline-map"
			},
			{
				"command": "outline-map.sortByPositionChecked",
				"title": "%om.cmd.sortByPosition.titleChecked%",
				"category": "outline-map"
			},
			{
				"command": "outline-map.sortByNameChecked",
				"title": "%om.cmd.sortByName.titleChecked%",
				"category": "outline-map"
			},
			{
				"command": "outline-map.sortByKindChecked",
				"title": "%om.cmd.sortByKind.titleChecked%",
				"category": "outline-map"
			},
			{
				"command": "outline-map.workspace.closeFile",
				"title": "%om.cmd.workspace.closeFile.title%",
				"category": "outline-map",
				"icon": "$(close)"
			},
			{
				"command": "outline-map.workspace.deleteSymbol",
				"title": "%om.cmd.workspace.deleteSymbol.title%",
				"category": "outline-map"
			},
			{
				"command": "outline-map.workspace.excludeInWorkspace",
				"title": "%om.cmd.workspace.excludeInWorkspace.title%",
				"category": "outline-map"
			},
			{
				"command": "outline-map.workspace.excludeInFolder",
				"title": "%om.cmd.workspace.excludeInFolder.title%",
				"category": "outline-map"
			},
			{
				"command": "outline-map.workspace.excludeGlobally",
				"title": "%om.cmd.workspace.excludeGlobally.title%",
				"category": "outline-map"
			},
			{
				"command": "outline-map.workspace.goToLocation",
				"title": "%om.cmd.workspace.goToLocation.title%",
				"category": "outline-map"
			}
		],
		"colors": [
			{
				"id": "outlineMap.visibleRangeBackground",
				"description": "%om.colors.outlineMap.visibleRangeBackground%",
				"defaults": {
					"dark": "list.hoverBackground",
					"light": "list.hoverBackground"
				}
			},
			{
				"id": "outlineMap.focusingItemBackground",
				"description": "%om.colors.outlineMap.focusingItemBackground%",
				"defaults": {
					"dark": "list.inactiveSelectionBackground",
					"light": "list.inactiveSelectionBackground"
				}
			},
			{
				"id": "outlineMap.focusingItemForeground",
				"description": "%om.colors.outlineMap.focusingItemForeground%",
				"defaults": {
					"dark": "list.inactiveSelectionForeground",
					"light": "list.inactiveSelectionForeground"
				}
			},
			{
				"id": "symbolIcon.om_RegionForeground",
				"description": "%om.colors.symbolIcon.om_RegionForeground%",
				"defaults": {
					"dark": "symbolIcon.packageForeground",
					"light": "symbolIcon.packageForeground"
				}
			},
			{
				"id": "symbolIcon.om_TagForeground",
				"description": "%om.colors.symbolIcon.om_TagForeground%",
				"defaults": {
					"dark": "symbolIcon.packageForeground",
					"light": "symbolIcon.packageForeground"
				}
			}
		],
		"keybindings": [
			{
				"command": "outline-map.focusSearch",
				"key": "Alt+l"
			}
		],
		"menus": {
			"commandPalette": [
				{
					"command": "outline-map.unpin",
					"when": "false"
				},
				{
					"command": "outline-map.pin",
					"when": "false"
				},
				{
					"command": "outline-map.unfreeze",
					"when": "false"
				},
				{
					"command": "outline-map.freeze",
					"when": "false"
				},
				{
					"command": "outline-map.addDepth",
					"when": "false"
				},
				{
					"command": "outline-map.reduceDepth",
					"when": "false"
				},
				{
					"command": "outline-map.sortByPositionChecked",
					"when": "false"
				},
				{
					"command": "outline-map.sortByNameChecked",
					"when": "false"
				},
				{
					"command": "outline-map.sortByKindChecked",
					"when": "false"
				},
				{
					"command": "outline-map.sortByPosition",
					"when": "false"
				},
				{
					"command": "outline-map.sortByName",
					"when": "false"
				},
				{
					"command": "outline-map.sortByKind",
					"when": "false"
				},
				{
					"command": "outline-map.workspace.closeFile",
					"when": "false"
				},
				{
					"command": "outline-map.workspace.deleteSymbol",
					"when": "false"
				},
				{
					"command": "outline-map.workspace.excludeInFolder",
					"when": "false"
				},
				{
					"command": "outline-map.workspace.excludeInWorkspace",
					"when": "false"
				},
				{
					"command": "outline-map.workspace.excludeGlobally",
					"when": "false"
				},
				{
					"command": "outline-map.workspace.goToLocation",
					"when": "false"
				}
			],
			"view/title": [
				{
					"command": "outline-map.pin",
					"when": "view == outline-map-view && outline-map.pin-status != 1",
					"group": "pin@1"
				},
				{
					"command": "outline-map.unpin",
					"when": "view == outline-map-view && outline-map.pin-status == 1",
					"group": "pin@2"
				},
				{
					"command": "outline-map.freeze",
					"when": "view == outline-map-view && outline-map.pin-status != 2",
					"group": "pin@3"
				},
				{
					"command": "outline-map.unfreeze",
					"when": "view == outline-map-view && outline-map.pin-status == 2",
					"group": "pin@4"
				},
				{
					"command": "outline-map.sortByPosition",
					"when": "view == outline-map-view && outline-map.sort-by != 0",
					"group": "sort@1"
				},
				{
					"command": "outline-map.sortByName",
					"when": "view == outline-map-view && outline-map.sort-by != 1",
					"group": "sort@3"
				},
				{
					"command": "outline-map.sortByKind",
					"when": "view == outline-map-view && outline-map.sort-by != 2",
					"group": "sort@5"
				},
				{
					"command": "outline-map.sortByPositionChecked",
					"when": "view == outline-map-view && outline-map.sort-by == 0",
					"group": "sort@2"
				},
				{
					"command": "outline-map.sortByNameChecked",
					"when": "view == outline-map-view && outline-map.sort-by == 1",
					"group": "sort@4"
				},
				{
					"command": "outline-map.sortByKindChecked",
					"when": "view == outline-map-view && outline-map.sort-by == 2",
					"group": "sort@6"
				},
				{
					"command": "outline-map.addDepth",
					"when": "view == outline-map-view && outline-map.defaultMaxDepthSet",
					"group": "navigation@2"
				},
				{
					"command": "outline-map.reduceDepth",
					"when": "view == outline-map-view && outline-map.defaultMaxDepthSet",
					"group": "navigation@1"
				},
				{
					"command": "outline-map.toggleSearch",
					"when": "view == outline-map-view",
					"group": "navigation@3"
				}
			],
			"view/item/context": [
				{
					"command": "outline-map.workspace.closeFile",
					"when": "view == outline-map-workspace && viewItem == file",
					"group": "inline"
				},
				{
					"command": "outline-map.workspace.deleteSymbol",
					"when": "view == outline-map-workspace && viewItem == symbol",
					"group": "exclude"
				},
				{
					"command": "outline-map.workspace.excludeInFolder",
					"when": "view == outline-map-workspace && workbenchState == folder",
					"group": "exclude"
				},
				{
					"command": "outline-map.workspace.excludeInWorkspace",
					"when": "view == outline-map-workspace && workbenchState == workspace",
					"group": "exclude"
				},
				{
					"command": "outline-map.workspace.excludeGlobally",
					"when": "view == outline-map-workspace",
					"group": "exclude"
				}
			]
		}
	},
	"scripts": {
		"test": "vscode-test-web --browserType=chromium --extensionDevelopmentPath=. --extensionTestsPath=out/test/suite/index.js",
		"pretest": "npm run compile-web",
		"vscode:prepublish": "npm run package-web",
		"compile-web": "webpack",
		"watch-web": "webpack --watch",
		"package-web": "webpack --mode production --devtool hidden-source-map",
		"lint": "eslint src --ext ts",
		"run-in-browser": "vscode-test-web --browserType=chromium --extensionDevelopmentPath=. ."
	},
	"devDependencies": {
		"@types/mocha": "^9.1.1",
		"@types/node": "^18.14.0",
		"@types/vscode": "^1.60.0",
		"@types/webpack-env": "^1.17.0",
		"@typescript-eslint/eslint-plugin": "^5.53.0",
		"@typescript-eslint/parser": "^5.53.0",
		"@vscode/test-web": "^0.0.26",
		"assert": "^2.0.0",
		"css-loader": "^6.7.3",
		"eslint": "^8.18.0",
		"mocha": "^10.0.0",
		"node-sass": "^8.0.0",
		"process": "^0.11.10",
		"sass-loader": "^13.2.0",
		"style-loader": "^3.3.1",
		"ts-loader": "^9.3.1",
		"typescript": "^4.7.4",
		"webpack": "^5.73.0",
		"webpack-cli": "^4.10.0"
	},
	"dependencies": {
		"@types/vscode-webview": "^1.57.1",
		"@vscode/codicons": "^0.0.31",
		"minimatch": "^9.0.3",
		"overlayscrollbars": "^2.1.0"
	}
}