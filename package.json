{
	"name": "outline-map",
	"displayName": "Outline Map",
	"description": "A visual, interactive outline map that combinesAlternative Minimap. the clarity of the outline with the intuitive overview of the minimap. Enhanced version of vscode built-in outline.",
	"version": "1.2.2",
	"repository": {
		"url": "https://github.com/Gerrnperl/outline-map.git"
	},
	"keywords": [
		"outline",
		"map",
		"minimap",
		"Thumbnail"
	],
	"author": {
		"name": "Gerrnperl"
	},
	"browser": "./out/extension/index.js",
	"icon": "icon/outline-map.png",
	"publisher": "Gerrnperl",
	"galleryBanner": {
		"color": "#3f51b5",
		"theme": "dark"
	},
	"license": "MIT",
	"engines": {
		"vscode": "^1.60.0"
	},
	"categories": [
		"Other"
	],
	"activationEvents": [
		"onView:outline-map-view"
	],
	"main": "./out/extension/index.js",
	"badges": [
		{
			"href": "https://img.shields.io/",
			"url": "https://img.shields.io/visual-studio-marketplace/v/gerrnperl.outline-map?color=8bf7c7&logo=visualstudio&style=flat-square",
			"description": "version"
		},
		{
			"href": "https://img.shields.io/",
			"url": "https://img.shields.io/visual-studio-marketplace/i/gerrnperl.outline-map?color=56b6c2&logo=visualstudiocode&style=flat-square",
			"description": "installs"
		},
		{
			"href": "https://img.shields.io/",
			"url": "https://img.shields.io/visual-studio-marketplace/stars/gerrnperl.outline-map?color=97dbf3&style=flat-square",
			"description": "rating"
		}
	],
	"contributes": {
		"viewsContainers": {
			"activitybar": [
				{
					"id": "outline-map",
					"title": "Outline Map",
					"icon": "icon/outline-map-24.svg"
				}
			]
		},
		"views": {
			"outline-map": [
				{
					"type": "webview",
					"id": "outline-map-view",
					"name": "Outline Map"
				},
				{
					"type": "tree",
					"id": "outline-map-workspace",
					"name": "Workspace Symbols",
					"when": "outline-map.workspace.enabled"
				}
			]
		},
		"configuration": {
			"title": "Outline Map",
			"properties": {
				"outline-map.color": {
					"type": "object",
					"deprecationMessage": "Custom colors are deprecated. Please customize the colors in `workbench.colorCustomizations` instead. Symbols Color Customizations: `symbolIcon.*`. Outline Color Customizations: `outlineMap.*`.",
					"description": "override colors of specific symbols and some ui components.",
					"properties": {
						"__om_Tag__": {
							"type": "string",
							"title": "Tag",
							"description": "The color of the custom tag symbols in the outline."
						},
						"__om_Region__": {
							"type": "string",
							"title": "Region",
							"description": "The color of the custom region symbols in the outline."
						},
						"visibleRange": {
							"type": "string",
							"title": "Visible Range",
							"description": "The color of the visible range in the outline."
						},
						"focusingItem": {
							"type": "string",
							"description": "The color of the focusing item in the outline."
						},
						"module": {
							"type": "string"
						},
						"namespace": {
							"type": "string"
						},
						"package": {
							"type": "string"
						},
						"class": {
							"type": "string"
						},
						"method": {
							"type": "string"
						},
						"property": {
							"type": "string"
						},
						"field": {
							"type": "string"
						},
						"constructor": {
							"type": "string"
						},
						"enum": {
							"type": "string"
						},
						"interface": {
							"type": "string"
						},
						"function": {
							"type": "string"
						},
						"variable": {
							"type": "string"
						},
						"constant": {
							"type": "string"
						},
						"string": {
							"type": "string"
						},
						"number": {
							"type": "string"
						},
						"boolean": {
							"type": "string"
						},
						"array": {
							"type": "string"
						},
						"object": {
							"type": "string"
						},
						"key": {
							"type": "string"
						},
						"null": {
							"type": "string"
						},
						"enummember": {
							"type": "string"
						},
						"struct": {
							"type": "string"
						},
						"event": {
							"type": "string"
						},
						"operator": {
							"type": "string"
						},
						"typeparameter": {
							"type": "string"
						}
					}
				},
				"outline-map.region.enabled": {
					"type": "boolean",
					"default": true,
					"markdownDescription": "Enable custom region and tag support. By default, regions start with the tag `#region <name>`and end with the tag `#endregion <name>`.  This extension does not do semantic analysis for specific languages, and content that is not part of the comments section may also be recognized as a tag"
				},
				"outline-map.region.highlight": {
					"type": "boolean",
					"default": true,
					"markdownDescription": "Enable highlighting for custom regions and tags in the editor."
				},
				"outline-map.region.highlightStyle": {
					"type": "object",
					"required": [],
					"default": {},
					"markdownDescription": "Text decoration style for regions and tags definition. See [DecorationRenderOptions](https://code.visualstudio.com/api/references/vscode-api#DecorationRenderOptions) for more details.",
					"properties": {
						"key": {
							"type": "object",
							"description": "The text decoration style for the key of the region or tag.",
							"required": [],
							"default": {},
							"properties": {
								"color": { "type": "string" },
								"backgroundColor": { "type": "string" },
								"overviewRulerColor": { "type": "string" }
							}
						},
						"name": {
							"type": "object",
							"description": "The text decoration style for the name of the region or tag.",
							"required": [],
							"default": {},
							"properties": {
								"color": { "type": "string" },
								"backgroundColor": { "type": "string" },
								"overviewRulerColor": { "type": "string" }
							}
						},
						"description": {
							"type": "object",
							"description": "The text decoration style for the description of the region or tag.",
							"required": [],
							"default": {},
							"properties": {
								"color": { "type": "string" },
								"backgroundColor": { "type": "string" },
								"overviewRulerColor": { "type": "string" }
							}
						}
					}
				},
				"outline-map.region.startRegion": {
					"type": "string",
					"default": "#region",
					"description": "The start region tag. The word after the tag will be seen as the region name."
				},
				"outline-map.region.endRegion": {
					"type": "string",
					"default": "#endregion",
					"description": "The end region tag. The word after the tag will be seen as the region name to close the region. If no name is specified, the last opened region will be closed."
				},
				"outline-map.region.tag": {
					"type": "string",
					"default": "#tag",
					"description": "The start tag. The word after the tag will be seen as the tag name."
				},
				"outline-map.follow": {
					"type": "string",
					"enum": [
						"cursor",
						"viewport",
						"manual"
					],
					"default": "cursor",
					"description": "Scroll the outline when the cursor moves or the viewport scrolls. if set to manual, the outline will not expand automatically."
				},
				"outline-map.hiddenItem": {
					"type": "array",
					"description": "Choose items to hide in the outline",
					"items": {
						"type": "string",
						"enum": [
							"module",
							"namespace",
							"package",
							"class",
							"method",
							"property",
							"field",
							"constructor",
							"enum",
							"interface",
							"function",
							"variable",
							"constant",
							"string",
							"number",
							"boolean",
							"array",
							"object",
							"key",
							"null",
							"enummember",
							"struct",
							"event",
							"operator",
							"typeparameter"
						]
					}
				},
				"outline-map.defaultMaxDepth": {
					"type": "number",
					"default": 0,
					"description": "The default max depth of the outline. 0 means no limit."
				},
				"outline-map.customFont": {
					"type": "string",
					"default": "",
					"markdownDescription": "Custom font for the outline.<br/> Syntax: `[ <family-name> | <generic-family> ]#`"
				},
				"outline-map.customCSS": {
					"type": "string",
					"default": "",
					"description": "Custom css for the outline. The css will be injected into the outline's webview."
				},
				"outline-map.debug": {
					"type": "boolean",
					"default": false,
					"description": "Enable debug mode. Debug messages will be printed to the console."
				},
				"outline-map.workspace.enabled": {
					"type": "boolean",
					"default": true,
					"markdownDescription": "Enable workspace symbol support. By default, regions and tags will be included in the workspace symbol list. Symbols that meet the conditions will only be loaded after the file is opened."
					
				},
				"outline-map.workspace.IncludeSymbols": {
					"type": "array",
					"description": "Select types to include in the workspace symbol list",
					"items": {
						"type": "string",
						"enum": [
							"File", "Module", "Namespace",
							"Package", "Class", "Method",
							"Property", "Field", "Constructor",
							"Enum", "Interface", "Function",
							"Variable", "Constant", "String",
							"Number", "Boolean", "Array",
							"Object", "Key", "Null",
							"EnumMember", "Struct", "Event",
							"Operator", "TypeParameter", "__om_Tag__",
							"__om_Region__"
						]
					},
					"default": [
						"__om_Tag__",
						"__om_Region__"
					]
				},
				"outline-map.workspace.excludes": {
					"type": "array",
					"description": "Items to exclude from the workspace symbol list, which can specify files, symbol names, or both files and symbol names. It has higher priority than `outline-map.workspace.IncludeNames/Symbols`.",
					"items": {
						"type": "object",
						"required": [],
						"properties": {
							"file": {
								"type": "string",
								"description": "exclude files with the name, support glob patterns"
							},
							"symbol": {
								"type": "string",
								"description": "exclude symbols with the name"
							}
						}
					}
				},
				"outline-map.workspace.IncludeNames": {
					"type": "array",
					"description": "Select names to include in the workspace symbol list. It's recommended to write tags in code instead of using this setting.",
					"items": {
						"type": "object",
						"required": ["symbol"],
						"properties": {
							"file": {
								"type": "string",
								"description": "include files with the name"
							},
							"symbol": {
								"type": "string",
								"description": "include symbols with the name"
							}
						}
					}
				}
			}
		},
		"commands": [
			{
				"command": "outline-map.reduceDepth",
				"title": "Depth-",
				"icon": "$(chevron-left)",
				"shortTitle": "Reduce depth",
				"category": "outline-map"
			},
			{
				"command": "outline-map.addDepth",
				"title": "Depth+",
				"icon": "$(chevron-right)",
				"shortTitle": "Add depth",
				"category": "outline-map"
			},
			{
				"command": "outline-map.unpin",
				"title": "Frozen -> Unpinned",
				"icon": "$(pinned-dirty)",
				"shortTitle": "Unpin",
				"category": "outline-map"
			},
			{
				"command": "outline-map.pin",
				"title": "Unpinned -> Pinned",
				"icon": "$(pin)",
				"shortTitle": "Pin",
				"category": "outline-map"
			},
			{
				"command": "outline-map.freeze",
				"title": "Pinned -> Frozen",
				"icon": "$(pinned)",
				"shortTitle": "Freeze",
				"category": "outline-map"
			},
			{
				"command": "outline-map.toggleSearch",
				"title": "Toggle Search Field",
				"icon": "$(search)",
				"shortTitle": "Search/Nav",
				"category": "outline-map"
			},
			{
				"command": "outline-map.focusSearch",
				"title": "Focus Search Field",
				"icon": "$(search)",
				"shortTitle": "Search/Nav",
				"category": "outline-map"
			},
			{
				"command": "outline-map.workspace.closeFile",
				"title": "Close",
				"category": "outline-map",
				"icon": "$(close)",
				"shortTitle": "Close"
			},
			{
				"command": "outline-map.workspace.deleteSymbol",
				"title": "Delete",
				"category": "outline-map",
				"shortTitle": "Delete"
			},
			{
				"command": "outline-map.workspace.excludeInWorkspace",
				"title": "Exclude in workspace",
				"category": "outline-map",
				"shortTitle": "Exclude in workspace"
			},
			{
				"command": "outline-map.workspace.excludeInFolder",
				"title": "Exclude in folder",
				"category": "outline-map",
				"shortTitle": "Exclude in folder"
			},
			{
				"command": "outline-map.workspace.excludeGlobally",
				"title": "Exclude globally",
				"category": "outline-map",
				"shortTitle": "Exclude globally"
			},
			{
				"command": "outline-map.workspace.goToLocation",
				"title": "Go to location of symbol",
				"category": "outline-map",
				"shortTitle": "Go to location of symbol"
			}
		],
		"colors": [
			{
				"id": "outlineMap.visibleRangeBackground",
				"description": "The color of the visible range in the outline.",
				"defaults": {
					"dark": "scrollbarSlider.background",
					"light": "scrollbarSlider.background"
				}
			},
			{
				"id": "outlineMap.focusingItemBackground",
				"description": "The color of the focusing item in the outline.",
				"defaults": {
					"dark": "list.hoverBackground",
					"light": "list.hoverBackground"
				}
			},
			{
				"id": "symbolIcon.om_RegionForeground",
				"description": "The color of the custom region symbols in the outline.",
				"defaults": {
					"dark": "symbolIcon.packageForeground",
					"light": "symbolIcon.packageForeground"
				}
			},
			{
				"id": "symbolIcon.om_TagForeground",
				"description": "The color of the custom tag symbols in the outline.",
				"defaults": {
					"dark": "symbolIcon.packageForeground",
					"light": "symbolIcon.packageForeground"
				}
			}
		],
		"keybindings": [
			{
				"command": "outline-map.focusSearch",
				"key": "Alt+l"
			}
		],
		"menus": {
			"view/title": [
				{
					"command": "outline-map.pin",
					"when": "view == outline-map-view && outline-map.pin-status == 0",
					"group": "navigation"
				},
				{
					"command": "outline-map.unpin",
					"when": "view == outline-map-view && outline-map.pin-status == 2",
					"group": "navigation"
				},
				{
					"command": "outline-map.freeze",
					"when": "view == outline-map-view && outline-map.pin-status == 1",
					"group": "navigation"
				},
				{
					"command": "outline-map.addDepth",
					"when": "view == outline-map-view && outline-map.defaultMaxDepthSet",
					"group": "navigation"
				},
				{
					"command": "outline-map.reduceDepth",
					"when": "view == outline-map-view && outline-map.defaultMaxDepthSet",
					"group": "navigation"
				},
				{
					"command": "outline-map.toggleSearch",
					"when": "view == outline-map-view",
					"group": "navigation"
				}
			],
			"view/item/context": [
				{
					"command": "outline-map.workspace.closeFile",
					"when": "view == outline-map-workspace && viewItem == file",
					"group": "inline"
				},
				{
					"command": "outline-map.workspace.deleteSymbol",
					"when": "view == outline-map-workspace && viewItem == symbol",
					"group": "exclude"
				},
				{
					"command": "outline-map.workspace.excludeInFolder",
					"when": "view == outline-map-workspace && workbenchState == folder",
					"group": "exclude"
				},
				{
					"command": "outline-map.workspace.excludeInWorkspace",
					"when": "view == outline-map-workspace && workbenchState == workspace",
					"group": "exclude"
				},
				{
					"command": "outline-map.workspace.excludeGlobally",
					"when": "view == outline-map-workspace",
					"group": "exclude"
				}
			]
		}
	},
	"scripts": {
		"test": "vscode-test-web --browserType=chromium --extensionDevelopmentPath=. --extensionTestsPath=out/test/suite/index.js",
		"pretest": "npm run compile-web",
		"vscode:prepublish": "npm run package-web",
		"compile-web": "webpack",
		"watch-web": "webpack --watch",
		"package-web": "webpack --mode production --devtool hidden-source-map",
		"lint": "eslint src --ext ts",
		"run-in-browser": "vscode-test-web --browserType=chromium --extensionDevelopmentPath=. ."
	},
	"devDependencies": {
		"@types/mocha": "^9.1.1",
		"@types/node": "^18.14.0",
		"@types/vscode": "^1.60.0",
		"@types/webpack-env": "^1.17.0",
		"@typescript-eslint/eslint-plugin": "^5.53.0",
		"@typescript-eslint/parser": "^5.53.0",
		"@vscode/test-web": "^0.0.26",
		"assert": "^2.0.0",
		"css-loader": "^6.7.3",
		"eslint": "^8.18.0",
		"mocha": "^10.0.0",
		"node-sass": "^8.0.0",
		"process": "^0.11.10",
		"sass-loader": "^13.2.0",
		"style-loader": "^3.3.1",
		"ts-loader": "^9.3.1",
		"typescript": "^4.7.4",
		"webpack": "^5.73.0",
		"webpack-cli": "^4.10.0"
	},
	"dependencies": {
		"@types/vscode-webview": "^1.57.1",
		"@vscode/codicons": "^0.0.31",
		"minimatch": "^9.0.3",
		"overlayscrollbars": "^2.1.0"
	}
}